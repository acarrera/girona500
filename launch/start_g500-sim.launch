<launch>
	<arg name="enableLog" value="false" />
	<arg name="enableUWSim" value="true" />
	<arg name="enableJoystick" value="false" />
	<arg name="desktopUserName" value="narcis" />
	<arg name="desktopMachineAddr" value="narcis-mbp" />
	<arg name="desktopMachineName" value="remote_machine" />
	<arg name="ROSMaster" value="http://narcis-mbp:11311/" />
	
	<!-- LOAD PARAMETERS -->
	<rosparam command="load" file="$(find safety_g500)/config/safety_g500.yaml" />	
	<rosparam command="load" file="$(find navigation_g500)/config/dynamics_odin.yaml" />
	<rosparam command="load" file="$(find control_g500)/config/thruster_allocator_sim.yaml" />
	<rosparam command="load" file="$(find control_g500)/config/velocity_controller_sim.yaml" />	
	<rosparam command="load" file="$(find control_g500)/config/pose_controller_sim.yaml" />		
	<rosparam command="load" file="$(find control_g500)/config/joy.yaml"/>
	<rosparam command="load" file="$(find control_g500)/config/pilot.yaml"/>	
	<rosparam command="load" file="$(find navigation_g500)/config/navigator.yaml" />
	<rosparam command="load" file="$(find control_g500)/../launch/mission_default.yaml" />
	
	<!-- OVERRIDE BASIC MISSION PARAMETERS -->
	<rosparam command="load" file="$(find safety_g500)/../launch/basic_mission_parameters.yaml" />	

	<!-- ################## AVOID TO TOUCH ANYTHING BELOW THIS LINE ##################### -->

	<!-- LOAD NODES -->

	<!-- Safety nodes -->
	<node name="safety_g500" pkg="safety_g500" type="safety_g500.py" output="screen"/>

	<!-- Run dynamics -->		
	<node name="dynamics" pkg="navigation_g500" type="dynamics.py" respawn="false" />

	<!-- Enable fake main control board -->
	<node name="fake_main_board_g500" pkg="safety_g500" type="fake_main_board_g500.py" />

	<!-- Run UWSim -->
	<node if="$(arg enableUWSim)" name="UWSim" pkg="UWSim" type="UWSim" args="--configfile $(find control_g500)/../data2/scenes2/cirsPandora.xml --dataPath $(find control_g500)/../data2/ --disableShaders " respawn="false"/>

	<!-- Run Control Stack -->
	<node name="teleoperation" pkg="control_g500" type="teleoperation"/>
	<node name="thruster_allocator" pkg="control_g500" type="thruster_allocator.py"/>
	<node name="velocity_controller" pkg="control_g500" type="velocity_controller.py"/> 
	<node name="merge_bvr" pkg="control_g500" type="merge_bvr.py"/>
	<node name="pilot" pkg="control_g500" type="pilot.py" output="screen"/>
	<node name="captain" pkg="control_g500" type="captain.py" output="screen"/>
	
	<!-- Run Navigation Stack -->
	<node name="navigator" pkg="navigation_g500" type="navigator.py" output="screen"/>

	<!-- Load Joystick or Keyboard -->
	<group if="$(arg enableJoystick)">
	<machine name="$(arg desktopMachineName)" address="$(arg desktopMachineAddr)" user="$(arg desktopUserName)">
			<env name="ROS_PACKAGE_PATH" value="/home/narcis/workspace/:/opt/ros/electric/stacks" />
			<env name="ROS_MASTER_URI" value="$(arg ROSMaster)" />
		</machine>
		<node respawn="true" pkg="joy" type="joy_node" name="joystick" machine="$(arg desktopMachineName)"> 
	  		<param name="deadzone" value="0.05"/>
			<param name="dev" value="/dev/input/js1"/>
		</node>
		<node respawn="true" name="logitech_f510_joystick" pkg="control_g500" type="logitech_f510_joystick.py" machine="$(arg desktopMachineName)" output="screen"/>
    	</group>

	<group unless="$(arg enableJoystick)">
		<node name="keyboard" pkg="control_g500" type="keyboard" />
 	</group>

	<node if="$(arg enableLog)" name="bag_record" output="screen" pkg="rosbag" type="record" args="-a -x '(/camera/image_m(.)*)|(/camera/image_c(.)*)|(/camera/image_rect/(.)*)|(/camera/image_rect)|(/camera/image_raw)|(/camera/image_rect_color/compressed)|(/camera/image_raw/compressed)' --split --size 2048 -o /home/$(env LOGNAME)/g500" />

</launch>

