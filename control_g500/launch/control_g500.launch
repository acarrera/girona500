<launch>
	<arg name="simulationMode" value="true" />
	<arg name="enableUWSim" value="true" />
	<arg name="disableShaders" value="true" />
	<arg name="teleoperationPose" value="false" />	<!-- Otherwise use teleoperation velocity -->


	

	<!-- Load simulation parameters -->
	<rosparam command="load" file="$(find navigation_g500)/config/dynamics_odin.yaml" />
	<rosparam command="load" file="$(find control_g500)/config/thruster_allocator_sim.yaml" />
	<rosparam command="load" file="$(find control_g500)/config/velocity_controller_sim.yaml" />	
	<rosparam command="load" file="$(find control_g500)/config/pose_controller_sim.yaml" />		
	<!-- Run dynamics -->		
	<node name="dynamics" pkg="navigation_g500" type="dynamics.py" respawn="false" />

	<group if="$(arg enableUWSim)">
		<group if="$(arg disableShaders)">
			<node name="UWSim" pkg="UWSim" type="UWSim" args="--disableShaders" respawn="false"/>
		</group>
		<group unless="$(arg disableShaders)">
			<node name="UWSim" pkg="UWSim" type="UWSim" respawn="false"/>
		</group>
	</group>
    	

	<!-- Run Control Stack -->
	<group if="$(arg teleoperationPose)">
		<rosparam command="load" file="$(find control_g500)/config/joy_pose.yaml" />
		<node name="pose_controller" pkg="control_g500" type="pose_controller.py"/>
		<node name="teleoperation_pose" pkg="control_g500" type="teleoperation_pose"/>
	</group>
    	<group unless="$(arg teleoperationPose)">
		<rosparam command="load" file="$(find control_g500)/config/joy_vel.yaml" />
		<node name="teleoperation_vel" pkg="control_g500" type="teleoperation_vel"/>
	</group>
	<node name="thruster_allocator" pkg="control_g500" type="thruster_allocator.py"/>
	<node name="velocity_controller" pkg="control_g500" type="velocity_controller.py"/>
	<node name="merge_bvr" pkg="control_g500" type="merge_bvr.py"/>

	<!-- Run Navigation Stack -->
	<rosparam command="load" file="$(find navigation_g500)/config/merged_navigation.yaml" />
	<node name="merged_navigation" pkg="navigation_g500" type="merged_navigation.py" output="screen"/>

	<group unless="$(arg simulationMode)">
		<rosparam command="load" file="$(find navigation_g500)/config/valeport_sound_velocity.yaml" />	
    		<rosparam command="load" file="$(find navigation_g500)/config/tritech_igc_gyro.yaml" />	
  		<rosparam command="load" file="$(find navigation_g500)/config/teledyne_explorer_dvl.yaml" />	

    		<node name="valeport_sound_velocity" pkg="navigation_g500" type="valeport_sound_velocity" respawn="true"/> 
    		<node name="tritech_igc_gyro" pkg="navigation_g500" type="tritech_igc_gyro" respawn="true" /> 
    		<node name="teledyne_explorer_dvl" pkg="navigation_g500" type="teledyne_explorer_dvl" respawn="true" />
	</group>



	<!-- Load Joystick or Keyboard -->
	<group if="$(arg enableJoystick)">
		<node respawn="true" pkg="joy" type="joy_node" name="joystick" > <!-- machine="$(arg desktopMachineName)" --> 
	  		<param name="deadzone" value="0.12"/>
			<param name="dev" value="/dev/input/js1"/>
		</node>
		<node respawn="true" name="ps3_joystick" pkg="control_g500" type="ps3_joystick" /> 
		<!-- machine="$(arg desktopMachineName)" --> 
    	</group>

	<group unless="$(arg enableJoystick)">
		<group if="$(arg teleoperationPose)">
			<node name="keyboard_pose" pkg="control_g500" type="keyboard_pose" />
    		</group>
    		<group unless="$(arg teleoperationPose)">
			<node name="keyboard_vel" pkg="control_g500" type="keyboard_vel" />
    		</group>
 	</group>
</launch>

